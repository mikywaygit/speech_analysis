{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://truth_will_set_you_free/webpack/bootstrap","webpack://truth_will_set_you_free/webpack/runtime/define property getters","webpack://truth_will_set_you_free/webpack/runtime/hasOwnProperty shorthand","webpack://truth_will_set_you_free/webpack/runtime/make namespace object","webpack://truth_will_set_you_free/./node_modules/gl-matrix/esm/common.js","webpack://truth_will_set_you_free/./node_modules/gl-matrix/esm/mat4.js","webpack://truth_will_set_you_free/./apps/data_visualization/static/data_visualization/js/webgl-utils/shaders.js","webpack://truth_will_set_you_free/./apps/data_visualization/static/data_visualization/js/webgl-utils/buffers.js","webpack://truth_will_set_you_free/./apps/data_visualization/static/data_visualization/js/webgl-utils/render.js","webpack://truth_will_set_you_free/./apps/data_visualization/static/data_visualization/js/interaction.js","webpack://truth_will_set_you_free/./apps/data_visualization/static/data_visualization/js/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","export function loadShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        const shaderType = type === gl.VERTEX_SHADER ? 'VERTEX_SHADER' : 'FRAGMENT_SHADER';\n        console.error(`An error occurred compiling the ${shaderType}: ${gl.getShaderInfoLog(shader)}`);\n        console.error(`Shader source that failed to compile:\\n${source}`);\n        gl.deleteShader(shader);\n        return null;\n    }\n\n    return shader;\n}\n\nexport function initShaderProgram(gl, vsSource, fsSource) {\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n\n    const shaderProgram = gl.createProgram();\n    gl.attachShader(shaderProgram, vertexShader);\n    gl.attachShader(shaderProgram, fragmentShader);\n    gl.linkProgram(shaderProgram);\n\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n        console.error('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\n        return null;\n    }\n\n    return shaderProgram;\n}\n\n// Vertex shader program remains unchanged\nexport const vsSource = `\n    attribute vec3 aVertexPosition;\n    uniform mat4 uModelViewMatrix;\n    uniform mat4 uProjectionMatrix;\n\n    void main(void) {\n        gl_Position = uProjectionMatrix * uModelViewMatrix * vec4(aVertexPosition, 1.0);\n    }\n`;\n\n// Fragment shader program updated to set the color to red\nexport const fsSource = `\n    precision mediump float;\n    uniform vec4 uColor; // Add this uniform for dynamic color control\n\n    void main(void) {\n        gl_FragColor = uColor; // Use the uniform color\n    }\n`;\n\n","export function initBuffers(gl) {\n    if (!gl) {\n        console.error('WebGL context is not available.');\n        return null;\n    }\n\n    // Buffer for the cube's vertices\n    const positionBuffer = gl.createBuffer();\n    if (!positionBuffer) {\n        console.error('Failed to create a position buffer.');\n        return null;\n    }\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n\n    const positions = [\n        // Front face\n        -1.0, -1.0, 1.0,\n        1.0, -1.0, 1.0,\n        1.0, 1.0, 1.0,\n        -1.0, 1.0, 1.0,\n        // Back face\n        -1.0, -1.0, -1.0,\n        1.0, -1.0, -1.0,\n        1.0, 1.0, -1.0,\n        -1.0, 1.0, -1.0,\n        // Top face\n        -1.0, 1.0, -1.0,\n        -1.0, 1.0, 1.0,\n        1.0, 1.0, 1.0,\n        1.0, 1.0, -1.0,\n        // Bottom face\n        -1.0, -1.0, -1.0,\n        1.0, -1.0, -1.0,\n        1.0, -1.0, 1.0,\n        -1.0, -1.0, 1.0,\n        // Right face\n        1.0, -1.0, -1.0,\n        1.0, 1.0, -1.0,\n        1.0, 1.0, 1.0,\n        1.0, -1.0, 1.0,\n        // Left face\n        -1.0, -1.0, -1.0,\n        -1.0, -1.0, 1.0,\n        -1.0, 1.0, 1.0,\n        -1.0, 1.0, -1.0,\n    ];\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n\n    // Create a buffer for the cube's face indices\n    const indexBuffer = gl.createBuffer();\n    if (!indexBuffer) {\n        console.error('Failed to create an index buffer.');\n        return null;\n    }\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n\n    const indices = [\n        0, 1, 2, 0, 2, 3, // Front face\n        4, 5, 6, 4, 6, 7, // Back face\n        8, 9, 10, 8, 10, 11, // Top face\n        12, 13, 14, 12, 14, 15, // Bottom face\n        16, 17, 18, 16, 18, 19, // Right face\n        20, 21, 22, 20, 22, 23, // Left face\n    ];\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\n\n    // Create a buffer for the cube's edge lines\n    const edgeIndices = [\n        // Each pair of vertices forms a line for an edge of the cube\n        0, 1, 1, 2, 2, 3, 3, 0, // Front face edges\n        4, 5, 5, 6, 6, 7, 7, 4, // Back face edges\n        0, 4, 1, 5, 2, 6, 3, 7, // Connecting edges between front and back\n        8, 9, 9, 10, 10, 11, 11, 8, // Top face edges\n        12, 13, 13, 14, 14, 15, 15, 12, // Bottom face edges\n        16, 17, 17, 18, 18, 19, 19, 16, // Right face edges\n        20, 21, 21, 22, 22, 23, 23, 20, // Left face edges\n    ];\n    const edgeBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, edgeBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(edgeIndices), gl.STATIC_DRAW);\n\n    // Add edge count for drawing lines\n    const edgeCount = edgeIndices.length / 2;\n\n    return {\n        position: positionBuffer,\n        indices: indexBuffer,\n        edgeIndices: edgeBuffer,\n        edgeCount: edgeCount, // Add edgeCount here\n    };\n}\n","import { mat4 } from 'gl-matrix';\n\nexport function drawScene(gl, programInfo, buffers, rotationAngles) {\n    if (!gl) {\n        console.error('WebGL context is not available.');\n        return;\n    }\n\n    gl.clearColor(0.5, 0.5, 0.5, 1.0); // Change to a gray background for visibility\n    gl.clearDepth(1.0);\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LEQUAL);\n\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Set up the perspective projection matrix\n    const fieldOfView = 45 * Math.PI / 180; // radians\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\n    const zNear = 0.1;\n    const zFar = 100.0;\n    const projectionMatrix = mat4.create();\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\n\n    // Set up the model-view matrix with translation and rotation for 3D view\n    const modelViewMatrix = mat4.create();\n    mat4.translate(modelViewMatrix, modelViewMatrix, [-0.0, 0.0, -6.0]);\n    let angleY = 45 * Math.PI / 180;\n    let angleX = 35 * Math.PI / 180;\n    mat4.rotate(modelViewMatrix, modelViewMatrix, angleY, [0, 1, 0]);\n    mat4.rotate(modelViewMatrix, modelViewMatrix, angleX, [1, 0, 0]);\n\n    gl.useProgram(programInfo.program);\n    gl.uniformMatrix4fv(programInfo.uniformLocations.projectionMatrix, false, projectionMatrix);\n    gl.uniformMatrix4fv(programInfo.uniformLocations.modelViewMatrix, false, modelViewMatrix);\n\n    // Set color to white for drawing the cube faces\n    gl.uniform4f(programInfo.uniformLocations.uColor, 1.0, 1.0, 1.0, 1.0);\n\n    // Draw the cube with filled triangles\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position);\n    gl.vertexAttribPointer(programInfo.attribLocations.vertexPosition, 3, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexPosition);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\n    gl.drawElements(gl.TRIANGLES, 36, gl.UNSIGNED_SHORT, 0);\n\n    // Change color to black and draw cube edges\n    gl.uniform4f(programInfo.uniformLocations.uColor, 0.0, 0.0, 0.0, 1.0);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.edgeIndices);\n    gl.drawElements(gl.LINES, buffers.edgeCount, gl.UNSIGNED_SHORT, 0); // Ensure buffers.edgeCount is correctly set\n}\n\n\nexport function render(gl, programInfo, buffers, then) {\n    requestAnimationFrame(function(now) {\n        if (!now) {\n            console.error('RequestAnimationFrame did not provide a timestamp.');\n            return;\n        }\n\n        now *= 0.001; // convert time to seconds\n        const deltaTime = now - then.value; // Calculate the time difference since the last frame\n        then.value = now;\n\n        const projectionMatrix = mat4.create();\n        const modelViewMatrix = mat4.create();\n\n        if (!projectionMatrix || !modelViewMatrix) {\n            console.error('Failed to create matrix.');\n            return;\n        }\n\n        drawScene(gl, programInfo, buffers, projectionMatrix, modelViewMatrix);\n\n        requestAnimationFrame(render.bind(null, gl, programInfo, buffers, then));\n    });\n}\n","// Global variables to track rotation\nlet isDragging = false;\nlet previousMousePosition = { x: 0, y: 0 };\nlet rotationAngles = { x: 0, y: 0 };\n\nexport const toRadians = (angleInDegrees) => angleInDegrees * Math.PI / 180;\n\nexport function setupInteractionHandlers(canvas) {\n    canvas.addEventListener('mousedown', handleMouseDown, false);\n    canvas.addEventListener('mousemove', handleMouseMove, false);\n    canvas.addEventListener('mouseup', handleMouseUp, false);\n    canvas.addEventListener('mouseleave', handleMouseUp, false); // Handle case when the mouse leaves the canvas\n}\n\nexport function handleMouseDown(event) {\n    isDragging = true;\n    previousMousePosition.x = event.clientX;\n    previousMousePosition.y = event.clientY;\n}\n\nexport function handleMouseMove(event) {\n    if (!isDragging) return;\n\n    const deltaX = event.clientX - previousMousePosition.x;\n    const deltaY = event.clientY - previousMousePosition.y;\n\n    rotationAngles.y += toRadians(deltaX);\n    rotationAngles.x += toRadians(deltaY);\n\n    previousMousePosition.x = event.clientX;\n    previousMousePosition.y = event.clientY;\n\n    // Emit an event or call a global function to trigger the scene update with the new rotation angles\n    updateScene(); // This needs to be defined in your main.js or a similar central place\n}\n\nexport function handleMouseUp(event) {\n    isDragging = false;\n}\n","// js/main.js\nimport { mat4 } from 'gl-matrix';\nimport { loadShader, initShaderProgram } from './webgl-utils/shaders.js';\nimport { initBuffers } from './webgl-utils/buffers.js';\nimport { drawScene, render } from './webgl-utils/render.js';\nimport { handleMouseDown, handleMouseMove, handleMouseUp, rotationAngles } from './interaction.js';\n\n\n// Expose functions to the global scope for debugging\nwindow.loadShader = loadShader;\nwindow.initShaderProgram = initShaderProgram;\nwindow.initBuffers = initBuffers;\nwindow.drawScene = drawScene;\nwindow.render = render;\nwindow.mat4 = mat4;\n\n// Shader sources\nconst vsSource = `\n    attribute vec4 aVertexPosition;\n    uniform mat4 uModelViewMatrix;\n    uniform mat4 uProjectionMatrix;\n    void main() {\n        gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n    }\n`;\n\nconst fsSource = `\n    precision mediump float;\n    uniform vec4 uColor; // Ensure this matches your shader's uniform name\n\n    void main() {\n        gl_FragColor = uColor; // Use the uniform color\n    }\n`;\n\n// Expose shader sources to the global scope\nwindow.vsSource = vsSource;\nwindow.fsSource = fsSource;\n\nfunction updateScene() {\n    // Update the model-view matrix based on current rotation angles\n    const modelViewMatrix = mat4.create();\n    mat4.translate(modelViewMatrix, modelViewMatrix, [-0.0, 0.0, -6.0]); // Initial translation\n    mat4.rotate(modelViewMatrix, modelViewMatrix, rotationAngles.x, [1, 0, 0]); // Rotate around X axis\n    mat4.rotate(modelViewMatrix, modelViewMatrix, rotationAngles.y, [0, 1, 0]); // Rotate around Y axis\n\n    // Redraw the scene with the updated model-view matrix\n    drawScene(window.gl, window.programInfo, window.buffers, window.projectionMatrix, modelViewMatrix);\n}\n\n// Ensure the updateScene function is accessible globally if needed\nwindow.updateScene = updateScene;\n\nasync function main() {\n    const canvas = document.getElementById('webgl-canvas');\n    const gl = canvas.getContext('webgl');\n\n    if (!gl) {\n        console.error('Unable to initialize WebGL.');\n        return;\n    }\n\n    // Expose the WebGL context globally for debugging\n    window.gl = gl;\n\n    // Initialize shader program\n    const shaderProgram = initShaderProgram(gl, vsSource, fsSource);\n    if (!shaderProgram) {\n        console.error('Initializing shader program failed.');\n        return;\n    }\n\n    // Define and expose programInfo globally for debugging\n    const programInfo = {\n        program: shaderProgram,\n        attribLocations: {\n            vertexPosition: gl.getAttribLocation(shaderProgram, 'aVertexPosition'),\n        },\n        uniformLocations: {\n            projectionMatrix: gl.getUniformLocation(shaderProgram, 'uProjectionMatrix'),\n            modelViewMatrix: gl.getUniformLocation(shaderProgram, 'uModelViewMatrix'),\n            uColor: gl.getUniformLocation(shaderProgram, 'uColor'), // Correctly set up for the uColor uniform\n        },\n    };\n    window.programInfo = programInfo;\n\n    const buffers = initBuffers(gl);\n    if (!buffers) {\n        console.error('Initializing buffers failed.');\n        return;\n    }\n\n    // Create and initialize the projection matrix\n    const projectionMatrix = mat4.create();\n    mat4.perspective(projectionMatrix, 45 * Math.PI / 180, gl.canvas.clientWidth / gl.canvas.clientHeight, 0.1, 100.0);\n\n    // Create and initialize the model-view matrix\n    const modelViewMatrix = mat4.create();\n    mat4.translate(modelViewMatrix, modelViewMatrix, [-0.0, 0.0, -6.0]);\n\n    // Draw the scene with the edges; you should pass edgeCount if your drawScene function needs it\n    drawScene(gl, programInfo, buffers, projectionMatrix, modelViewMatrix, buffers.edgeCount); // Adjusted to include edgeCount\n\n    // Initialize 'then' for tracking the last frame's render time\n    let then = {value: 0};\n    // Continuously render the scene\n    render(gl, programInfo, buffers, then);\n}\n\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n    const canvas = document.getElementById('webgl-canvas');\n    canvas.addEventListener('mousedown', handleMouseDown);\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n\n    // Rest of your main function setup\n\n    // Modify the render loop to use updated rotationAngles\n    const renderLoop = () => {\n    // Update the model-view matrix with current rotation angles before drawing\n    const modelViewMatrix = mat4.create();\n    mat4.translate(modelViewMatrix, modelViewMatrix, [-0.0, 0.0, -6.0]); // Move the cube back a bit\n    mat4.rotate(modelViewMatrix, modelViewMatrix, rotationAngles.x, [1, 0, 0]); // Apply X rotation\n    mat4.rotate(modelViewMatrix, modelViewMatrix, rotationAngles.y, [0, 1, 0]); // Apply Y rotation\n\n    drawScene(gl, programInfo, buffers, projectionMatrix, modelViewMatrix); // No need for edgeCount here if it's used inside drawScene for edges\n    requestAnimationFrame(renderLoop);\n    };\n});\n\n\ndocument.addEventListener('DOMContentLoaded', main);\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","EPSILON","ARRAY_TYPE","Float32Array","Array","create","out","clone","a","copy","fromValues","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","set","identity","transpose","a01","a02","a03","a12","a13","a23","invert","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","adjoint","determinant","multiply","b","b0","b1","b2","b3","translate","v","x","y","z","scale","rotate","rad","axis","s","c","t","b12","b20","b21","b22","len","Math","hypot","sin","cos","rotateX","rotateY","rotateZ","fromTranslation","fromScaling","fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","q","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","sqrt","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","fromQuat","yx","zx","zy","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspectiveNO","fovy","aspect","f","tan","Infinity","random","PI","i","arguments","length","perspective","perspectiveZO","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","orthoNO","lr","bt","ortho","orthoZO","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","abs","targetTo","target","str","frob","add","subtract","multiplyScalar","multiplyScalarAndAdd","exactEquals","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","max","mul","sub","loadShader","gl","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","shaderType","VERTEX_SHADER","console","error","concat","getShaderInfoLog","deleteShader","initShaderProgram","vsSource","fsSource","vertexShader","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","initBuffers","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","edgeIndices","edgeBuffer","position","indices","edgeCount","drawScene","programInfo","buffers","rotationAngles","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","fieldOfView","canvas","clientWidth","clientHeight","projectionMatrix","mat4","modelViewMatrix","angleY","angleX","useProgram","program","uniformMatrix4fv","uniformLocations","uniform4f","uColor","vertexAttribPointer","attribLocations","vertexPosition","FLOAT","enableVertexAttribArray","drawElements","TRIANGLES","UNSIGNED_SHORT","LINES","render","then","requestAnimationFrame","now","bind","isDragging","previousMousePosition","toRadians","angleInDegrees","handleMouseDown","event","clientX","clientY","handleMouseMove","deltaX","deltaY","updateScene","handleMouseUp","_regeneratorRuntime","e","r","n","iterator","asyncIterator","u","define","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","h","l","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","_asyncToGenerator","fn","self","args","apply","err","undefined","window","_main","_callee2","_context2","document","getElementById","getContext","getAttribLocation","getUniformLocation","addEventListener","_callee","_context"],"sourceRoot":""}